content='from django.contrib import admin\nfrom django.urls import path, include\nfrom django.conf import settings\nfrom django.conf.urls.static import static\nfrom django.http import JsonResponse\nfrom django.views.decorators.csrf import csrf_exempt\nfrom django.utils.decorators import method_decorator\nfrom django.views.generic import View\nimport logging\n\nlogger = logging.getLogger(__name__)\n\nclass HealthCheckView(View):\n    """\n    Simple health check endpoint for monitoring\n    """\n    def get(self, request):\n        return JsonResponse({\n            \'status\': \'healthy\',\n            \'message\': \'E-commerce API is running\'\n        })\n\n@method_decorator(csrf_exempt, name=\'dispatch\')\nclass APINotFoundView(View):\n    """\n    Custom 404 handler for API endpoints\n    """\n    def dispatch(self, request, *args, **kwargs):\n        logger.warning(f"API endpoint not found: {request.path}")\n        return JsonResponse({\n            \'error\': \'API endpoint not found\',\n            \'message\': f\'The requested endpoint {request.path} does not exist\',\n            \'status_code\': 404\n        }, status=404)\n\nurlpatterns = [\n    # Admin interface\n    path(\'admin/\', admin.site.urls),\n    \n    # Health check endpoint\n    path(\'health/\', HealthCheckView.as_view(), name=\'health_check\'),\n    \n    # API endpoints\n    path(\'api/v1/auth/\', include(\'apps.authentication.urls\')),\n    path(\'api/v1/products/\', include(\'apps.products.urls\')),\n    path(\'api/v1/orders/\', include(\'apps.orders.urls\')),\n    path(\'api/v1/cart/\', include(\'apps.cart.urls\')),\n    path(\'api/v1/payments/\', include(\'apps.payments.urls\')),\n    path(\'api/v1/notifications/\', include(\'apps.notifications.urls\')),\n    path(\'api/v1/users/\', include(\'apps.users.urls\')),\n    \n    # Catch-all for undefined API routes\n    path(\'api/\', APINotFoundView.as_view()),\n]\n\n# Serve media files in development\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\n    \n    # Add debug toolbar if installed\n    if \'debug_toolbar\' in settings.INSTALLED_APPS:\n        import debug_toolbar\n        urlpatterns = [\n            path(\'__debug__/\', include(debug_toolbar.urls)),\n        ] + urlpatterns\n\n# Custom error handlers\nhandler404 = \'config.views.custom_404\'\nhandler500 = \'config.views.custom_500\'\nhandler403 = \'config.views.custom_403\'\nhandler400 = \'config.views.custom_400\'\n\n# Admin site customization\nadmin.site.site_header = \'E-commerce Platform Admin\'\nadmin.site.site_title = \'E-commerce Admin Portal\'\nadmin.site.index_title = \'Welcome to E-commerce Administration\'' additional_kwargs={} response_metadata={'id': 'msg_01UYunyig6pN6A4FWtd7F88v', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'end_turn', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 398, 'output_tokens': 763, 'service_tier': 'standard'}} id='run--4dd0187b-233e-4d36-baa4-47ab08b55f0e-0' usage_metadata={'input_tokens': 398, 'output_tokens': 763, 'total_tokens': 1161, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}