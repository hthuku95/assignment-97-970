content="from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom . import views\n\n# Create router for ViewSet-based views\nrouter = DefaultRouter()\nrouter.register(r'products', views.ProductViewSet, basename='product')\nrouter.register(r'categories', views.CategoryViewSet, basename='category')\nrouter.register(r'reviews', views.ProductReviewViewSet, basename='review')\n\napp_name = 'products'\n\nurlpatterns = [\n    # Include router URLs\n    path('', include(router.urls)),\n    \n    # Product-specific endpoints\n    path('products/<int:product_id>/reviews/', \n         views.ProductReviewListCreateView.as_view(), \n         name='product-reviews'),\n    \n    path('products/<int:product_id>/reviews/<int:review_id>/', \n         views.ProductReviewDetailView.as_view(), \n         name='product-review-detail'),\n    \n    path('products/<int:product_id>/images/', \n         views.ProductImageListCreateView.as_view(), \n         name='product-images'),\n    \n    path('products/<int:product_id>/images/<int:image_id>/', \n         views.ProductImageDetailView.as_view(), \n         name='product-image-detail'),\n    \n    path('products/featured/', \n         views.FeaturedProductsView.as_view(), \n         name='featured-products'),\n    \n    path('products/search/', \n         views.ProductSearchView.as_view(), \n         name='product-search'),\n    \n    path('products/by-category/<int:category_id>/', \n         views.ProductsByCategoryView.as_view(), \n         name='products-by-category'),\n    \n    path('products/<int:product_id>/related/', \n         views.RelatedProductsView.as_view(), \n         name='related-products'),\n    \n    path('products/<int:product_id>/availability/', \n         views.ProductAvailabilityView.as_view(), \n         name='product-availability'),\n    \n    # Category-specific endpoints\n    path('categories/tree/', \n         views.CategoryTreeView.as_view(), \n         name='category-tree'),\n    \n    path('categories/<int:category_id>/subcategories/', \n         views.SubcategoriesView.as_view(), \n         name='subcategories'),\n    \n    # Inventory management endpoints\n    path('products/<int:product_id>/inventory/', \n         views.ProductInventoryView.as_view(), \n         name='product-inventory'),\n    \n    path('products/<int:product_id>/inventory/update/', \n         views.UpdateInventoryView.as_view(), \n         name='update-inventory'),\n    \n    # Price management endpoints\n    path('products/<int:product_id>/price-history/', \n         views.ProductPriceHistoryView.as_view(), \n         name='product-price-history'),\n    \n    # Wishlist endpoints\n    path('products/<int:product_id>/wishlist/', \n         views.WishlistToggleView.as_view(), \n         name='wishlist-toggle'),\n    \n    # Bulk operations\n    path('products/bulk-update/', \n         views.BulkProductUpdateView.as_view(), \n         name='bulk-product-update'),\n    \n    path('products/bulk-delete/', \n         views.BulkProductDeleteView.as_view(), \n         name='bulk-product-delete'),\n    \n    # Analytics endpoints\n    path('products/<int:product_id>/analytics/', \n         views.ProductAnalyticsView.as_view(), \n         name='product-analytics'),\n    \n    path('products/trending/', \n         views.TrendingProductsView.as_view(), \n         name='trending-products'),\n    \n    # Export endpoints\n    path('products/export/', \n         views.ProductExportView.as_view(), \n         name='product-export'),\n    \n    path('categories/export/', \n         views.CategoryExportView.as_view(), \n         name='category-export'),\n]" additional_kwargs={} response_metadata={'id': 'msg_01QB4yNhzuYbYsrs6N1vPVih', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'end_turn', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 400, 'output_tokens': 1019, 'service_tier': 'standard'}} id='run--931d586d-00f4-4e26-8729-569803ae83ad-0' usage_metadata={'input_tokens': 400, 'output_tokens': 1019, 'total_tokens': 1419, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}