content="from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom . import views\n\n# Create router for viewsets\nrouter = DefaultRouter()\nrouter.register(r'methods', views.PaymentMethodViewSet, basename='paymentmethod')\nrouter.register(r'transactions', views.PaymentTransactionViewSet, basename='paymenttransaction')\n\napp_name = 'payments'\n\nurlpatterns = [\n    # Include router URLs\n    path('', include(router.urls)),\n    \n    # Stripe-specific endpoints\n    path('stripe/create-payment-intent/', views.CreatePaymentIntentView.as_view(), name='create-payment-intent'),\n    path('stripe/confirm-payment/', views.ConfirmPaymentView.as_view(), name='confirm-payment'),\n    path('stripe/webhook/', views.StripeWebhookView.as_view(), name='stripe-webhook'),\n    path('stripe/setup-intent/', views.CreateSetupIntentView.as_view(), name='create-setup-intent'),\n    path('stripe/attach-payment-method/', views.AttachPaymentMethodView.as_view(), name='attach-payment-method'),\n    \n    # Payment processing endpoints\n    path('process/', views.ProcessPaymentView.as_view(), name='process-payment'),\n    path('refund/', views.RefundPaymentView.as_view(), name='refund-payment'),\n    path('cancel/', views.CancelPaymentView.as_view(), name='cancel-payment'),\n    \n    # Payment status and history\n    path('status/<str:payment_id>/', views.PaymentStatusView.as_view(), name='payment-status'),\n    path('history/', views.PaymentHistoryView.as_view(), name='payment-history'),\n    \n    # Payment method management\n    path('methods/default/', views.SetDefaultPaymentMethodView.as_view(), name='set-default-payment-method'),\n    path('methods/<str:method_id>/delete/', views.DeletePaymentMethodView.as_view(), name='delete-payment-method'),\n    \n    # Subscription and recurring payments\n    path('subscriptions/', views.SubscriptionListView.as_view(), name='subscription-list'),\n    path('subscriptions/create/', views.CreateSubscriptionView.as_view(), name='create-subscription'),\n    path('subscriptions/<str:subscription_id>/', views.SubscriptionDetailView.as_view(), name='subscription-detail'),\n    path('subscriptions/<str:subscription_id>/cancel/', views.CancelSubscriptionView.as_view(), name='cancel-subscription'),\n    \n    # Invoice management\n    path('invoices/', views.InvoiceListView.as_view(), name='invoice-list'),\n    path('invoices/<str:invoice_id>/', views.InvoiceDetailView.as_view(), name='invoice-detail'),\n    path('invoices/<str:invoice_id>/download/', views.DownloadInvoiceView.as_view(), name='download-invoice'),\n    \n    # Payment analytics (admin only)\n    path('analytics/summary/', views.PaymentAnalyticsView.as_view(), name='payment-analytics'),\n    path('analytics/revenue/', views.RevenueAnalyticsView.as_view(), name='revenue-analytics'),\n    \n    # Dispute and chargeback handling\n    path('disputes/', views.DisputeListView.as_view(), name='dispute-list'),\n    path('disputes/<str:dispute_id>/', views.DisputeDetailView.as_view(), name='dispute-detail'),\n    path('disputes/<str:dispute_id>/respond/', views.RespondToDisputeView.as_view(), name='respond-dispute'),\n]" additional_kwargs={} response_metadata={'id': 'msg_01MJvhwcDD2xD6E9gSyp7Q4r', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'end_turn', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 400, 'output_tokens': 896, 'service_tier': 'standard'}} id='run--969aba9f-a34a-48c3-b615-5c3b612465a4-0' usage_metadata={'input_tokens': 400, 'output_tokens': 896, 'total_tokens': 1296, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}