content="from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom rest_framework_simplejwt.views import (\n    TokenRefreshView,\n    TokenVerifyView,\n)\nfrom . import views\n\napp_name = 'authentication'\n\n# Create a router for ViewSet-based views\nrouter = DefaultRouter()\nrouter.register(r'users', views.UserViewSet, basename='user')\n\nurlpatterns = [\n    # Authentication endpoints\n    path('register/', views.RegisterView.as_view(), name='register'),\n    path('login/', views.LoginView.as_view(), name='login'),\n    path('logout/', views.LogoutView.as_view(), name='logout'),\n    path('refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('verify/', TokenVerifyView.as_view(), name='token_verify'),\n    \n    # Password management\n    path('password/change/', views.ChangePasswordView.as_view(), name='change_password'),\n    path('password/reset/', views.PasswordResetRequestView.as_view(), name='password_reset'),\n    path('password/reset/confirm/', views.PasswordResetConfirmView.as_view(), name='password_reset_confirm'),\n    \n    # Email verification\n    path('email/verify/', views.EmailVerificationView.as_view(), name='email_verify'),\n    path('email/resend-verification/', views.ResendVerificationView.as_view(), name='resend_verification'),\n    \n    # Profile management\n    path('profile/', views.UserProfileView.as_view(), name='user_profile'),\n    path('profile/update/', views.UpdateProfileView.as_view(), name='update_profile'),\n    path('profile/delete/', views.DeleteAccountView.as_view(), name='delete_account'),\n    \n    # Two-factor authentication\n    path('2fa/enable/', views.EnableTwoFactorView.as_view(), name='enable_2fa'),\n    path('2fa/disable/', views.DisableTwoFactorView.as_view(), name='disable_2fa'),\n    path('2fa/verify/', views.VerifyTwoFactorView.as_view(), name='verify_2fa'),\n    path('2fa/backup-codes/', views.GenerateBackupCodesView.as_view(), name='generate_backup_codes'),\n    \n    # Social authentication (if implemented)\n    path('social/google/', views.GoogleAuthView.as_view(), name='google_auth'),\n    path('social/facebook/', views.FacebookAuthView.as_view(), name='facebook_auth'),\n    \n    # User management (admin/staff only)\n    path('admin/users/', views.AdminUserListView.as_view(), name='admin_user_list'),\n    path('admin/users/<int:user_id>/', views.AdminUserDetailView.as_view(), name='admin_user_detail'),\n    path('admin/users/<int:user_id>/activate/', views.AdminActivateUserView.as_view(), name='admin_activate_user'),\n    path('admin/users/<int:user_id>/deactivate/', views.AdminDeactivateUserView.as_view(), name='admin_deactivate_user'),\n    \n    # Session management\n    path('sessions/', views.UserSessionsView.as_view(), name='user_sessions'),\n    path('sessions/<str:session_id>/revoke/', views.RevokeSessionView.as_view(), name='revoke_session'),\n    path('sessions/revoke-all/', views.RevokeAllSessionsView.as_view(), name='revoke_all_sessions'),\n    \n    # Account security\n    path('security/activity/', views.SecurityActivityView.as_view(), name='security_activity'),\n    path('security/devices/', views.TrustedDevicesView.as_view(), name='trusted_devices'),\n    path('security/devices/<int:device_id>/remove/', views.RemoveTrustedDeviceView.as_view(), name='remove_trusted_device'),\n    \n    # Include router URLs for ViewSet endpoints\n    path('', include(router.urls)),\n]" additional_kwargs={} response_metadata={'id': 'msg_0174msRS7npbj9CnxtuTESoZ', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'end_turn', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 400, 'output_tokens': 1005, 'service_tier': 'standard'}} id='run--2432d148-1a01-4ead-9e2d-8e0eacd8cd43-0' usage_metadata={'input_tokens': 400, 'output_tokens': 1005, 'total_tokens': 1405, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}